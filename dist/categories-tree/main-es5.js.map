{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/categories-routing.module.ts","webpack:///src/app/categories/categories.module.ts","webpack:///src/app/categories/create-update-category/create-update-category.component.ts","webpack:///src/app/categories/create-update-category/create-update-category.component.html","webpack:///src/app/categories/index/index.component.ts","webpack:///src/app/categories/index/index.component.html","webpack:///src/app/core/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/core/components/dialogs/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/core/constants/app.config.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/services/categories.service.ts","webpack:///src/app/shared/modules/material.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CategoriesRoutingModule","forChild","CategoriesModule","CreateUpdateCategoryComponent","categoriesService","fb","router","route","categoryForm","group","parent","name","required","routeSnapshot","snapshot","paramMap","params","editCase","getCategoryById","subscribe","dt","patchValue","getList","categories","update","value","navigate","r","add","saveCategory","FileNode","FileFlatNode","expandable","level","TREE_DATA","JSON","stringify","Applications","Calendar","Chrome","Webstorm","Documents","angular","src","compiler","core","material2","button","checkbox","input","Downloads","October","November","Tutorial","Pictures","Contents","Sun","Woods","FileDatabase","dataChange","initialize","get","next","IndexComponent","database","dialog","expandedNodeSet","Set","dragging","expandDelay","transformer","node","children","getLevel","isExpandable","getChildren","hasChild","_","nodeData","treeFlattener","treeControl","dataSource","data","rebuildTreeForData","rememberExpandedTreeNodes","result","addExpandedChildren","expanded","push","has","hasOwnProperty","map","child","forEach","event","isPointerOverContainer","visibleNodes","changedData","parse","findNodeSiblings","arr","subResult","item","siblings","siblingIndex","findIndex","n","nodeToInsert","splice","console","log","nodeAtDest","currentIndex","relativeIndex","nodeAtDestFlatNode","dataNodes","find","getParentNode","parentIndex","newSiblings","updateCategoriesOrder","clearTimeout","expandTimeout","setTimeout","expand","forgetMissingExpandedNodes","expandNodesById","Array","from","isExpanded","nodeId","flatNodes","ids","length","idSet","currentLevel","startIndex","indexOf","i","currentNode","open","width","afterClosed","remove","drop","ConfirmationDialogComponent","close","reject","confirm","API_URL","url","language","supported","CoreModule","entryComponents","CategoriesService","http","post","put","providedIn","MaterialModule","SharedModule","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,YADR;AAEEC,eAAS,EAAE;AAFb,KADqB,EAKrB;AACED,UAAI,EAAE,iBADR;AAEEC,eAAS,EAAE;AAFb,KALqB,EASrB;AACED,UAAI,EAAE,qBADR;AAEEC,eAAS,EAAE;AAFb,KATqB,CAAvB;;QAmBaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACzB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,iBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAwBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,4DAHO,EAIP,4FAJO,EAKP,qEALO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB;AAZN,kBAGZ,uEAHY,EAIZ,oEAJY,EAKZ,4DALY,EAMZ,4FANY,EAOZ,qEAPY;AAYM,O;AALF,K;;;;;sEAKPA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,CADN;AAIRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4DAHO,EAIP,4FAJO,EAKP,qEALO,CAJD;AAWRQ,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACxBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMd,MAAM,GAAW,EAAvB;;QAMae,uB;;;;;YAAAA;;;;yBAAAA,uB;AAAuB,O;AAAA,gBAHzB,CAAC,6DAAaC,QAAb,CAAsBhB,MAAtB,CAAD,CAGyB,EAFxB,4DAEwB;;;;0HAAvBe,uB,EAAuB;AAAA;AAAA,kBAFxB,4DAEwB;AAAA,O;AAFZ,K;;;;;sEAEXA,uB,EAAuB;cAJnC,sDAImC;eAJ1B;AACRV,iBAAO,EAAE,CAAC,6DAAaW,QAAb,CAAsBhB,MAAtB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI0B,Q;;;;;;;;;;;;;;;;;;ACVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBamB,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBANlB,CACP,4DADO,EAEP,kFAFO,EAGP,kEAHO,CAMkB;;;;0HAAhBA,gB,EAAgB;AAAA,uBAPZ,qEAOY,EAPI,sHAOJ;AAPiC,kBAE1D,4DAF0D,EAG1D,kFAH0D,EAI1D,kEAJ0D;AAOjC,O;AAHb,K;;;;;sEAGHA,gB,EAAgB;cAR5B,sDAQ4B;eARnB;AACRL,sBAAY,EAAE,CAAC,qEAAD,EAAiB,sHAAjB,CADN;AAERP,iBAAO,EAAE,CACP,4DADO,EAEP,kFAFO,EAGP,kEAHO;AAFD,S;AAQmB,Q;;;;;;;;;;;;;;;;;;ACjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACOM;;AAAsE;;AAAiB;;;;;;AAAvC;;AAAsB;;AAAA;;;;QDG/Da,6B;AAMX,6CACUC,iBADV,EAEUC,EAFV,EAGSC,MAHT,EAIUC,KAJV,EAI+B;AAAA;;AAAA;;AAHrB,aAAAH,iBAAA,GAAAA,iBAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACC,aAAAC,KAAA,GAAAA,KAAA;AAER,aAAKC,YAAL,GAAoB,KAAKH,EAAL,CAAQI,KAAR,CAAc;AAChCC,gBAAM,EAAE,CAAC,EAAD,CADwB;AAEhCC,cAAI,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAF0B;AAGhC5B,YAAE,EAAE,CAAC,EAAD;AAH4B,SAAd,CAApB;AAMA,YAAM6B,aAAa,GAAG,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,QAA1C;AACA,YAAM/B,EAAE,GAAG,CAAC6B,aAAa,CAACG,MAAd,CAAqBhC,EAAjC;AACA,aAAKiC,QAAL,GAAgB,CAAC,CAACjC,EAAlB;;AAEA,YAAI,KAAKiC,QAAT,EAAmB;AACjB,eAAKb,iBAAL,CAAuBc,eAAvB,CAAuC;AAAClC,cAAE,EAAFA;AAAD,WAAvC,EAA6CmC,SAA7C,CAAuD,UAACC,EAAD,EAAQ;AAC7D,iBAAI,CAACZ,YAAL,CAAkBa,UAAlB,CAA6BD,EAA7B;AACD,WAFD;AAGD;AACF;;;;mCAEO;AAAA;;AACN,eAAKhB,iBAAL,CAAuBkB,OAAvB,GAAiCH,SAAjC,CAA2C,UAACC,EAAD,EAAa;AACtD,kBAAI,CAACG,UAAL,GAAkBH,EAAlB;AACD,WAFD;AAID;;;uCAEc;AAAA;;AACb,cAAI,KAAKH,QAAT,EAAmB;AACjB,iBAAKb,iBAAL,CAAuBoB,MAAvB,CAA8B,KAAKhB,YAAL,CAAkBiB,KAAhD,EAAuDN,SAAvD,CAAiE,YAAM;AACrE,oBAAI,CAACb,MAAL,CAAYoB,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqCjD,IAArC,CAA0C,UAAAkD,CAAC;AAAA,uBAAIA,CAAJ;AAAA,eAA3C;AACD,aAFD;AAGD,WAJD,MAIO;AAEL,iBAAKvB,iBAAL,CAAuBwB,GAAvB,CAA2B,KAAKpB,YAAL,CAAkBiB,KAA7C,EAAoDN,SAApD,CAA8D,YAAM;AAClE,oBAAI,CAACb,MAAL,CAAYoB,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqCjD,IAArC,CAA0C,UAAAkD,CAAC;AAAA,uBAAIA,CAAJ;AAAA,eAA3C;AACD,aAFD;AAGD;AACF;;;;;;;uBA/CUxB,6B,EAA6B,oJ,EAAA,2H,EAAA,uH,EAAA,+H;AAAA,K;;;YAA7BA,6B;AAA6B,iD;AAAA,e;AAAA,a;AAAA,0P;AAAA;AAAA;ACV1C;;AAEE;;AAAI;;AAAgB;;AAEpB;;AAAW;;AAAsB;;AACjC;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AAA0C;AAAA,mBAAS,IAAA0B,YAAA,EAAT;AAAuB,WAAvB;;AACxC;;AACF;;AACF;;;;AAlBM;;AAOY;;AAAA;;;;;;;;;sEDGL1B,6B,EAA6B;cALzC,uDAKyC;eAL/B;AACTV,kBAAQ,EAAE,4BADD;AAETC,qBAAW,EAAE,yCAFJ;AAGTC,mBAAS,EAAE,CAAC,yCAAD;AAHF,S;AAK+B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEV1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWM;;AACe;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA8B,YAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B,EAA8B,gBAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B,EAA8B,iBAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B;;AAEb;;AACA;;AACA;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,OAAAW,MAAA,WAAiB,sBAAmB,UAApC,EAAT;AAAuD,SAAvD;;AACtB;;AAAU;;AAAI;;AAChB;;AACA;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAK;;AACjB;;AACF;;;;;;AAXuF;;AAIrF;;AAAA;;;;;;;;AASF;;AACe;AAAA;;AAAA;;AAAA;;AAAA;AAAA,WAA8B,YAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B,EAA8B,gBAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B,EAA8B,iBAA9B,EAA8B;AAAA;;AAAA;;AAAA;AAAA,SAA9B;;AAEb;;AAEE;;AACE;;AACF;;AACF;;AACA;;AACA;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,MAAA,WAAiB,sBAAmB,WAApC,EAAT;AAAuD,SAAvD;;AACtB;;AAAU;;AAAI;;AAChB;;AACA;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AAAU;;AAAK;;AACjB;;AACF;;;;;;;;AAhBoF;;AAI1E;;AAAA;;AAEJ;;AAAA;;AAGJ;;AAAA;;;ADvBR;;;;;;QAIawB,Q;;;AAOb;;;QACaC,Y,GACX,sBACSC,UADT,EAESrB,IAFT,EAGSsB,KAHT,EAIE;AACOjD,MALT,EAKmB;AAAA;;AAJV,WAAAgD,UAAA,GAAAA,UAAA;AACA,WAAArB,IAAA,GAAAA,IAAA;AACA,WAAAsB,KAAA,GAAAA,KAAA;AAEA,WAAAjD,EAAA,GAAAA,EAAA;AAER,K;AAGH;;;;;AAGA,QAAMkD,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC/BC,kBAAY,EAAE;AACZC,gBAAQ,EAAE,KADE;AAEZC,cAAM,EAAE,KAFI;AAGZC,gBAAQ,EAAE;AAHE,OADiB;AAM/BC,eAAS,EAAE;AACTC,eAAO,EAAE;AACPC,aAAG,EAAE;AACHC,oBAAQ,EAAE,IADP;AAEHC,gBAAI,EAAE;AAFH;AADE,SADA;AAOTC,iBAAS,EAAE;AACTH,aAAG,EAAE;AACHI,kBAAM,EAAE,IADL;AAEHC,oBAAQ,EAAE,IAFP;AAGHC,iBAAK,EAAE;AAHJ;AADI;AAPF,OANoB;AAqB/BC,eAAS,EAAE;AACTC,eAAO,EAAE,KADA;AAETC,gBAAQ,EAAE,KAFD;AAGTC,gBAAQ,EAAE;AAHD,OArBoB;AA0B/BC,cAAQ,EAAE;AACR,+BAAuB;AACrBC,kBAAQ,EAAE,KADW;AAErBD,kBAAQ,EAAE;AAFW,SADf;AAKRE,WAAG,EAAE,KALG;AAMRC,aAAK,EAAE;AANC;AA1BqB,KAAf,CAAlB;AAoCA;;;;;;;;QAQaC,Y;AAOX,4BACUtD,iBADV,EAC8C;AAAA;;AAApC,aAAAA,iBAAA,GAAAA,iBAAA;AAPV,aAAAuD,UAAA,GAAa,IAAI,oDAAJ,CAAgC,EAAhC,CAAb;AASE,aAAKC,UAAL;AACD;;;;qCAEY;AAAA;;AAEX,eAAKxD,iBAAL,CAAuByD,GAAvB,GAA6B1C,SAA7B,CAAuC,UAACC,EAAD,EAAa;AAElD;AACA,kBAAI,CAACuC,UAAL,CAAgBG,IAAhB,CAAqB1C,EAArB;AACD,WAJD;AAOD;;;4BAnBO;AACN,iBAAO,KAAKuC,UAAL,CAAgBlC,KAAvB;AACD;;;;;;;uBALUiC,Y,EAAY,2I;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;AAyBzB;;;;;QASaK,c;AAUX,8BACEC,QADF,EAEU5D,iBAFV,EAGSE,MAHT,EAIU2D,MAJV,EAI2B;AAAA;;AAAA;;AAFjB,aAAA7D,iBAAA,GAAAA,iBAAA;AACD,aAAAE,MAAA,GAAAA,MAAA;AACC,aAAA2D,MAAA,GAAAA,MAAA;AATV,aAAAC,eAAA,GAAkB,IAAIC,GAAJ,EAAlB;AACA,aAAAC,QAAA,GAAW,KAAX;AAEA,aAAAC,WAAA,GAAc,IAAd;;AAgBA,aAAAC,WAAA,GAAc,UAACC,IAAD,EAAiBtC,KAAjB,EAAmC;AAC/C,iBAAO,IAAIF,YAAJ,CAAiB,CAAC,CAACwC,IAAI,CAACC,QAAxB,EAAkCD,IAAI,CAAC5D,IAAvC,EAA6CsB,KAA7C,EAAoDsC,IAAI,CAACvF,EAAzD,CAAP;AACD,SAFD;;AAGQ,aAAAyF,QAAA,GAAW,UAACF,IAAD;AAAA,iBAAwBA,IAAI,CAACtC,KAA7B;AAAA,SAAX;;AACA,aAAAyC,YAAA,GAAe,UAACH,IAAD;AAAA,iBAAwBA,IAAI,CAACvC,UAA7B;AAAA,SAAf;;AACA,aAAA2C,WAAA,GAAc,UAACJ,IAAD;AAAA,iBAA4C,gDAAaA,IAAI,CAACC,QAAlB,CAA5C;AAAA,SAAd;;AACR,aAAAI,QAAA,GAAW,UAACC,CAAD,EAAYC,QAAZ;AAAA,iBAAuCA,QAAQ,CAAC9C,UAAhD;AAAA,SAAX;;AAdE,aAAK+C,aAAL,GAAqB,IAAI,uEAAJ,CAAqB,KAAKT,WAA1B,EAAuC,KAAKG,QAA5C,EACnB,KAAKC,YADc,EACA,KAAKC,WADL,CAArB;AAEA,aAAKK,WAAL,GAAmB,IAAI,iEAAJ,CAAkC,KAAKP,QAAvC,EAAiD,KAAKC,YAAtD,CAAnB;AACA,aAAKO,UAAL,GAAkB,IAAI,4EAAJ,CAA0B,KAAKD,WAA/B,EAA4C,KAAKD,aAAjD,CAAlB;AAEAf,gBAAQ,CAACL,UAAT,CAAoBxC,SAApB,CAA8B,UAAA+D,IAAI;AAAA,iBAAI,MAAI,CAACC,kBAAL,CAAwBD,IAAxB,CAAJ;AAAA,SAAlC;AACD;AAUD;;;;;;;;uCAIY;AAAA;;AACV,eAAKE,yBAAL,CAA+B,KAAKJ,WAApC,EAAiD,KAAKd,eAAtD;AACA,cAAMmB,MAAM,GAAG,EAAf;;AAEA,mBAASC,mBAAT,CAA6Bf,IAA7B,EAA6CgB,QAA7C,EAAoE;AAClEF,kBAAM,CAACG,IAAP,CAAYjB,IAAZ;;AACA,gBAAIgB,QAAQ,CAACE,GAAT,CAAalB,IAAI,CAACvF,EAAlB,CAAJ,EAA2B;AACzB;AACA,kBAAIuF,IAAI,CAACmB,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACnCnB,oBAAI,CAACC,QAAL,CAAcmB,GAAd,CAAkB,UAAAC,KAAK;AAAA,yBAAIN,mBAAmB,CAACM,KAAD,EAAQL,QAAR,CAAvB;AAAA,iBAAvB;AACD;AACF;AACF;;AAED,eAAKN,UAAL,CAAgBC,IAAhB,CAAqBW,OAArB,CAA6B,UAAAtB,IAAI,EAAI;AACnCe,+BAAmB,CAACf,IAAD,EAAO,MAAI,CAACL,eAAZ,CAAnB;AACD,WAFD;AAGA,iBAAOmB,MAAP;AACD;AAED;;;;;;;6BAIKS,K,EAA8B;AACjC;AAEA;AACA,cAAI,CAACA,KAAK,CAACC,sBAAX,EAAmC;AACjC;AACD,WANgC,CAQjC;AACA;AACA;;;AACA,cAAMC,YAAY,GAAG,KAAKA,YAAL,EAArB,CAXiC,CAajC;;AACA,cAAMC,WAAW,GAAG9D,IAAI,CAAC+D,KAAL,CAAW/D,IAAI,CAACC,SAAL,CAAe,KAAK6C,UAAL,CAAgBC,IAA/B,CAAX,CAApB,CAdiC,CAgBjC;;AACA,mBAASiB,gBAAT,CAA0BC,GAA1B,EAA2CpH,EAA3C,EAAqD;AACnD,gBAAIqG,MAAJ,EAAYgB,SAAZ;AACAD,eAAG,CAACP,OAAJ,CAAY,UAAAS,IAAI,EAAI;AAClB,kBAAIA,IAAI,CAACtH,EAAL,KAAYA,EAAhB,EAAoB;AAClBqG,sBAAM,GAAGe,GAAT;AACD,eAFD,MAEO,IAAIE,IAAI,CAAC9B,QAAT,EAAmB;AACxB6B,yBAAS,GAAGF,gBAAgB,CAACG,IAAI,CAAC9B,QAAN,EAAgBxF,EAAhB,CAA5B;;AACA,oBAAIqH,SAAJ,EAAe;AACbhB,wBAAM,GAAGgB,SAAT;AACD;AACF;AACF,aATD;AAUA,mBAAOhB,MAAP;AACD,WA9BgC,CAgCjC;;;AACA,cAAMd,IAAI,GAAGuB,KAAK,CAACQ,IAAN,CAAWpB,IAAxB;AACA,cAAMqB,QAAQ,GAAGJ,gBAAgB,CAACF,WAAD,EAAc1B,IAAI,CAACvF,EAAnB,CAAjC;AACA,cAAMwH,YAAY,GAAGD,QAAQ,CAACE,SAAT,CAAmB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC1H,EAAF,KAASuF,IAAI,CAACvF,EAAlB;AAAA,WAApB,CAArB;AACA,cAAM2H,YAAY,GAAaJ,QAAQ,CAACK,MAAT,CAAgBJ,YAAhB,EAA8B,CAA9B,EAAiC,CAAjC,CAA/B;AACAK,iBAAO,CAACC,GAAR,CAAYb,WAAZ,EArCiC,CAuCjC;;AACA,cAAMc,UAAU,GAAGf,YAAY,CAACF,KAAK,CAACkB,YAAP,CAA/B;;AACA,cAAID,UAAU,CAAC/H,EAAX,KAAkB2H,YAAY,CAAC3H,EAAnC,EAAuC;AACrC;AACD,WA3CgC,CA6CjC;;;AACA,cAAIiI,aAAa,GAAGnB,KAAK,CAACkB,YAA1B,CA9CiC,CA8CO;;AACxC,cAAME,kBAAkB,GAAG,KAAKlC,WAAL,CAAiBmC,SAAjB,CAA2BC,IAA3B,CAAgC,UAAAV,CAAC;AAAA,mBAAIK,UAAU,CAAC/H,EAAX,KAAkB0H,CAAC,CAAC1H,EAAxB;AAAA,WAAjC,CAA3B;AACA,cAAM0B,MAAM,GAAG,KAAK2G,aAAL,CAAmBH,kBAAnB,CAAf;;AACA,cAAIxG,MAAJ,EAAY;AACV,gBAAM4G,WAAW,GAAGtB,YAAY,CAACS,SAAb,CAAuB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC1H,EAAF,KAAS0B,MAAM,CAAC1B,EAApB;AAAA,aAAxB,IAAkD,CAAtE;AACAiI,yBAAa,GAAGnB,KAAK,CAACkB,YAAN,GAAqBM,WAArC;AACD,WApDgC,CAqDjC;;;AACA,cAAMC,WAAW,GAAGpB,gBAAgB,CAACF,WAAD,EAAcc,UAAU,CAAC/H,EAAzB,CAApC;;AACA,cAAI,CAACuI,WAAL,EAAkB;AAChB;AACD;;AACDA,qBAAW,CAACX,MAAZ,CAAmBK,aAAnB,EAAkC,CAAlC,EAAqCN,YAArC;AAEA,eAAKvG,iBAAL,CAAuBoH,qBAAvB,CAA6CvB,WAA7C,EAA0D9E,SAA1D,CAAoE,UAAAC,EAAE,EAAI,CAEzE,CAFD,EA5DiC,CA+DjC;;AACA,eAAK+D,kBAAL,CAAwBc,WAAxB;AACD;AAED;;;;;;oCAGY;AACV,eAAK7B,QAAL,GAAgB,IAAhB;AACD;;;kCAES;AACR,eAAKA,QAAL,GAAgB,KAAhB;AACD;;;kCAESG,I,EAAoB;AAAA;;AAC5B,cAAI,KAAKH,QAAT,EAAmB;AACjBqD,wBAAY,CAAC,KAAKC,aAAN,CAAZ;AACA,iBAAKA,aAAL,GAAqBC,UAAU,CAAC,YAAM;AACpC,oBAAI,CAAC3C,WAAL,CAAiB4C,MAAjB,CAAwBrD,IAAxB;AACD,aAF8B,EAE5B,KAAKF,WAFuB,CAA/B;AAGD;AACF;;;uCAEc;AACb,cAAI,KAAKD,QAAT,EAAmB;AACjBqD,wBAAY,CAAC,KAAKC,aAAN,CAAZ;AACD;AACF;AAED;;;;;;;2CAKmBxC,I,EAAW;AAC5B,eAAKE,yBAAL,CAA+B,KAAKJ,WAApC,EAAiD,KAAKd,eAAtD;AACA,eAAKe,UAAL,CAAgBC,IAAhB,GAAuBA,IAAvB;AACA,eAAK2C,0BAAL,CAAgC,KAAK7C,WAArC,EAAkD,KAAKd,eAAvD;AACA,eAAK4D,eAAL,CAAqB,KAAK9C,WAAL,CAAiBmC,SAAtC,EAAiDY,KAAK,CAACC,IAAN,CAAW,KAAK9D,eAAhB,CAAjD;AACD;;;kDAGCc,W,EACAd,e,EAA4B;AAE5B,cAAIc,WAAW,CAACmC,SAAhB,EAA2B;AACzBnC,uBAAW,CAACmC,SAAZ,CAAsBtB,OAAtB,CAA8B,UAACtB,IAAD,EAAU;AACtC,kBAAIS,WAAW,CAACN,YAAZ,CAAyBH,IAAzB,KAAkCS,WAAW,CAACiD,UAAZ,CAAuB1D,IAAvB,CAAtC,EAAoE;AAClE;AACAL,+BAAe,CAACtC,GAAhB,CAAoB2C,IAAI,CAACvF,EAAzB;AACD;AACF,aALD;AAMD;AACF;;;mDAGCgG,W,EACAd,e,EAA4B;AAE5B,cAAIc,WAAW,CAACmC,SAAhB,EAA2B;AACzBjD,2BAAe,CAAC2B,OAAhB,CAAwB,UAACqC,MAAD,EAAY;AAClC;AACA,kBAAI,CAAClD,WAAW,CAACmC,SAAZ,CAAsBC,IAAtB,CAA2B,UAACV,CAAD;AAAA,uBAAOA,CAAC,CAAC1H,EAAF,KAASkJ,MAAhB;AAAA,eAA3B,CAAL,EAAyD;AACvD;AACAhE,+BAAe,UAAf,CAAuBgE,MAAvB;AACD;AACF,aAND;AAOD;AACF;;;wCAEuBC,S,EAA2BC,G,EAAe;AAAA;;AAChE,cAAI,CAACD,SAAD,IAAcA,SAAS,CAACE,MAAV,KAAqB,CAAvC,EAA0C;AACxC;AACD;;AACD,cAAMC,KAAK,GAAG,IAAInE,GAAJ,CAAQiE,GAAR,CAAd;AACA,iBAAOD,SAAS,CAACtC,OAAV,CAAkB,UAACtB,IAAD,EAAU;AACjC,gBAAI+D,KAAK,CAAC7C,GAAN,CAAUlB,IAAI,CAACvF,EAAf,CAAJ,EAAwB;AACtB,oBAAI,CAACgG,WAAL,CAAiB4C,MAAjB,CAAwBrD,IAAxB;;AACA,kBAAI7D,MAAM,GAAG,MAAI,CAAC2G,aAAL,CAAmB9C,IAAnB,CAAb;;AACA,qBAAO7D,MAAP,EAAe;AACb,sBAAI,CAACsE,WAAL,CAAiB4C,MAAjB,CAAwBlH,MAAxB;;AACAA,sBAAM,GAAG,MAAI,CAAC2G,aAAL,CAAmB3G,MAAnB,CAAT;AACD;AACF;AACF,WATM,CAAP;AAUD;;;sCAEqB6D,I,EAAkB;AACtC,cAAMgE,YAAY,GAAGhE,IAAI,CAACtC,KAA1B;;AACA,cAAIsG,YAAY,GAAG,CAAnB,EAAsB;AACpB,mBAAO,IAAP;AACD;;AACD,cAAMC,UAAU,GAAG,KAAKxD,WAAL,CAAiBmC,SAAjB,CAA2BsB,OAA3B,CAAmClE,IAAnC,IAA2C,CAA9D;;AACA,eAAK,IAAImE,CAAC,GAAGF,UAAb,EAAyBE,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,gBAAMC,WAAW,GAAG,KAAK3D,WAAL,CAAiBmC,SAAjB,CAA2BuB,CAA3B,CAApB;;AACA,gBAAIC,WAAW,CAAC1G,KAAZ,GAAoBsG,YAAxB,EAAsC;AACpC,qBAAOI,WAAP;AACD;AACF;;AACD,iBAAO,IAAP;AACD;;;uCAEc3J,E,EAAI;AAAA;;AACjB,eAAKiF,MAAL,CAAY2E,IAAZ,CAAiB,sIAAjB,EAA8C;AAACC,iBAAK,EAAE;AAAR,WAA9C,EAAgEC,WAAhE,GAA8E3H,SAA9E,CAAwF,UAAAkE,MAAM,EAAI;AAChG,gBAAIA,MAAJ,EAAY;AACV,oBAAI,CAACjF,iBAAL,CAAuB2I,MAAvB,CAA8B;AAAC/J,kBAAE,EAAFA;AAAD,eAA9B,EAAoCmC,SAApC,CAA8C,UAACC,EAAD,EAAa;AACzD,sBAAI,CAAC6D,UAAL,CAAgBC,IAAhB,GAAuB9D,EAAvB;AACD,eAFD;AAGD;AACF,WAND;AAQD;;;;;;;uBA3OU2C,c,EAAc,gEAWbL,YAXa,C,EAWD,oJ,EAAA,uH,EAAA,mI;AAAA,K;;;YAXbK,c;AAAc,gC;AAAA,kFAFd,CAACL,YAAD,CAEc,E;AAFA,e;AAAA,a;AAAA,o8B;AAAA;AAAA;AChH3B;;AACE;;AAA0C;AAAA,mBAAS,IAAApD,MAAA,WAAiB,kBAAjB,EAAT;AAA8C,WAA9C;;AAAgD;;AAAgB;;AAC5G;;AAEA;;AAEE;;AAAI;;AAAa;;AACjB;;AACA;;AAEE;;AAA4E;AAAA,mBAAsB,IAAA0I,IAAA,QAAtB;AAAkC,WAAlC;;AAC1E;;AAaA;;AAiBF;;AACF;;AACF;;;;AAjCc;;AAAA,iGAAyB,aAAzB,EAAyB,eAAzB;;AAcO;;AAAA;;;;;;;;;sED0FRjF,c,EAAc;cAN1B,uDAM0B;eANhB;AACTtE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD,CAHF;AAITG,mBAAS,EAAE,CAAC4D,YAAD;AAJF,S;AAMgB,Q;;gBAWbA;WAAY;AAAA;AAAA,S,EAAA;AAAA;AAAA,S,EAAA;AAAA;AAAA,S;AAAA,O,EAAA,I;AAAA,K;;;;;;;;;;;;;;;;;AE7H1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQauF,2B;AAEX,2CACUhF,MADV,EAC2D;AAAA;;AAAjD,aAAAA,MAAA,GAAAA,MAAA;AACL;;;;mCAEG,CACP;;;iCAEK;AACJ,eAAKA,MAAL,CAAYiF,KAAZ,CAAkB,KAAlB;AACD;;;kCACM;AACL,eAAKjF,MAAL,CAAYiF,KAAZ,CAAkB,IAAlB;AACD;;;;;;;uBAdUD,2B,EAA2B,sI;AAAA,K;;;YAA3BA,2B;AAA2B,8C;AAAA,c;AAAA,a;AAAA,yO;AAAA;AAAA;ACRxC;;AACE;;AAAoB;;AAA0B;;AAC9C;;AACE;;AAAwD;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AACjF;;AAA0D;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAO;;AACvF;;AACF;;;;;;;;;sEDEaH,2B,EAA2B;cALvC,uDAKuC;eAL7B;AACTxJ,kBAAQ,EAAE,yBADD;AAETC,qBAAW,EAAE,sCAFJ;AAGTC,mBAAS,EAAE,CAAC,sCAAD;AAHF,S;AAK6B,Q;;;;;;;;;;;;;;;;;;;;;;AERxC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAM0J,OAAO,GAAG,iDAAYC,GAA5B;AAEA,QAAMC,QAAQ,GAAG;AACpB,iBAAS,IADW;AAEpBC,eAAS,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb;AAFS,KAAjB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBATZ,CACP,4DADO,EAEP,8EAFO,EAGP,8EAHO,CASY;;;;0HAAVA,U,EAAU;AAAA,uBAVN,iIAUM;AAVqB,kBAExC,4DAFwC,EAGxC,8EAHwC,EAIxC,8EAJwC;AAUrB,O;AANL,K;;;;;sEAMLA,U,EAAU;cAXtB,sDAWsB;eAXb;AACR5J,sBAAY,EAAE,CAAC,iIAAD,CADN;AAERP,iBAAO,EAAE,CACP,4DADO,EAEP,8EAFO,EAGP,8EAHO,CAFD;AAORoK,yBAAe,EAAE,CACf,iIADe;AAPT,S;AAWa,Q;;;;;;;;;;;;;;;;;;AClBvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,iB;AACX,iCACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAET;;;;8BAEK;AACJ,iBAAO,KAAKA,IAAL,CAAU/F,GAAV,WAAiB,6DAAjB,oBAAP;AACD;;;kCAES;AACR,iBAAO,KAAK+F,IAAL,CAAU/F,GAAV,WAAiB,6DAAjB,yBAAP;AACD;;;wCAEe7C,M,EAAQ;AACtB,iBAAO,KAAK4I,IAAL,CAAU/F,GAAV,WAAiB,6DAAjB,2BAAgD;AAAC7C,kBAAM,EAANA;AAAD,WAAhD,CAAP;AACD;;;4BAEGkE,I,EAAM;AACR,iBAAO,KAAK0E,IAAL,CAAUC,IAAV,WAAkB,6DAAlB,wBAA8C3E,IAA9C,CAAP;AACD;;;+BAEMA,I,EAAM;AACX,iBAAO,KAAK0E,IAAL,CAAUE,GAAV,WAAiB,6DAAjB,gCAAqD5E,IAArD,CAAP;AACD;;;+BAEMlE,M,EAAQ;AACb,iBAAO,KAAK4I,IAAL,qBAAoB,6DAApB,wBAAgD;AAAC5I,kBAAM,EAANA;AAAD,WAAhD,CAAP;AACD;;;8CAEqBkE,I,EAAM;AAC1B,iBAAO,KAAK0E,IAAL,CAAUE,GAAV,WAAiB,6DAAjB,8BAAmD5E,IAAnD,CAAP;AACD;;;;;;;uBAhCUyE,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVI,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAwGaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,iBApCd,CACT,kEADS,C;AAEV,gBApCQ,CACP,4DADO,EAEP,wEAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,wEALO,EAMP,qEANO,EAOP,sEAPO,EAQP,uEARO,EASP,iFATO,EAUP,2EAVO,EAWP,uEAXO,EAYP,2EAZO,EAaP,6EAbO,EAcP,qEAdO,EAeP,2EAfO,EAgBP,oFAhBO,EAiBP,uEAjBO,EAkBP,+EAlBO,EAmBP,qEAnBO,EAoBP,2EApBO,EAqBP,4FArBO,EAsBP,uEAtBO,EAuBP,yEAvBO,EAwBP,qFAxBO,EAyBP,qEAzBO,EA0BP,sFA1BO,EA2BP,oEA3BO,EA4BP,mFA5BO,EA6BP,wEA7BO,EA8BP,2EA9BO,EA+BP,sEA/BO,CAoCR,EAEC,wEAFD,EAGC,oEAHD,EAIC,oEAJD,EAKC,wEALD,EAMC,qEAND,EAOC,sEAPD,EAQC,uEARD,EASC,iFATD,EAUC,2EAVD,EAWC,uEAXD,EAYC,2EAZD,EAaC,6EAbD,EAcC,qEAdD,EAeC,2EAfD,EAgBC,oFAhBD,EAiBC,uEAjBD,EAkBC,+EAlBD,EAmBC,qEAnBD,EAoBC,2EApBD,EAqBC,4FArBD,EAsBC,uEAtBD,EAuBC,yEAvBD,EAwBC,qFAxBD,EAyBC,qEAzBD,EA0BC,sFA1BD,EA2BC,oEA3BD,EA4BC,mFA5BD,EA6BC,wEA7BD,EA8BC,2EA9BD,EA+BC,sEA/BD;;;;0HAkCUA,c,EAAc;AAAA,kBArEvB,4DAqEuB,EApEvB,wEAoEuB,EAnEvB,oEAmEuB,EAlEvB,oEAkEuB,EAjEvB,wEAiEuB,EAhEvB,qEAgEuB,EA/DvB,sEA+DuB,EA9DvB,uEA8DuB,EA7DvB,iFA6DuB,EA5DvB,2EA4DuB,EA3DvB,uEA2DuB,EA1DvB,2EA0DuB,EAzDvB,6EAyDuB,EAxDvB,qEAwDuB,EAvDvB,2EAuDuB,EAtDvB,oFAsDuB,EArDvB,uEAqDuB,EApDvB,+EAoDuB,EAnDvB,qEAmDuB,EAlDvB,2EAkDuB,EAjDvB,4FAiDuB,EAhDvB,uEAgDuB,EA/CvB,yEA+CuB,EA9CvB,qFA8CuB,EA7CvB,qEA6CuB,EA5CvB,sFA4CuB,EA3CvB,oEA2CuB,EA1CvB,mFA0CuB,EAzCvB,wEAyCuB,EAxCvB,2EAwCuB,EAvCvB,sEAuCuB;AAvCT,kBAOd,wEAPc,EAQd,oEARc,EASd,oEATc,EAUd,wEAVc,EAWd,qEAXc,EAYd,sEAZc,EAad,uEAbc,EAcd,iFAdc,EAed,2EAfc,EAgBd,uEAhBc,EAiBd,2EAjBc,EAkBd,6EAlBc,EAmBd,qEAnBc,EAoBd,2EApBc,EAqBd,oFArBc,EAsBd,uEAtBc,EAuBd,+EAvBc,EAwBd,qEAxBc,EAyBd,2EAzBc,EA0Bd,4FA1Bc,EA2Bd,uEA3Bc,EA4Bd,yEA5Bc,EA6Bd,qFA7Bc,EA8Bd,qEA9Bc,EA+Bd,sFA/Bc,EAgCd,oEAhCc,EAiCd,mFAjCc,EAkCd,wEAlCc,EAmCd,2EAnCc,EAoCd,sEApCc;AAuCS,O;AAHT,K;;;;;sEAGLA,c,EAAc;cAvE1B,sDAuE0B;eAvEjB;AACR1K,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,wEALO,EAMP,qEANO,EAOP,sEAPO,EAQP,uEARO,EASP,iFATO,EAUP,2EAVO,EAWP,uEAXO,EAYP,2EAZO,EAaP,6EAbO,EAcP,qEAdO,EAeP,2EAfO,EAgBP,oFAhBO,EAiBP,uEAjBO,EAkBP,+EAlBO,EAmBP,qEAnBO,EAoBP,2EApBO,EAqBP,4FArBO,EAsBP,uEAtBO,EAuBP,yEAvBO,EAwBP,qFAxBO,EAyBP,qEAzBO,EA0BP,sFA1BO,EA2BP,oEA3BO,EA4BP,mFA5BO,EA6BP,wEA7BO,EA8BP,2EA9BO,EA+BP,sEA/BO,CADD;AAkCRO,sBAAY,EAAE,EAlCN;AAmCRC,mBAAS,EAAE,CACT,kEADS,CAnCH;AAsCRf,iBAAO,EAAE,CACP,wEADO,EAEP,oEAFO,EAGP,oEAHO,EAIP,wEAJO,EAKP,qEALO,EAMP,sEANO,EAOP,uEAPO,EAQP,iFARO,EASP,2EATO,EAUP,uEAVO,EAWP,2EAXO,EAYP,6EAZO,EAaP,qEAbO,EAcP,2EAdO,EAeP,oFAfO,EAgBP,uEAhBO,EAiBP,+EAjBO,EAkBP,qEAlBO,EAmBP,2EAnBO,EAoBP,4FApBO,EAqBP,uEArBO,EAsBP,yEAtBO,EAuBP,qFAvBO,EAwBP,qEAxBO,EAyBP,sFAzBO,EA0BP,oEA1BO,EA2BP,mFA3BO,EA4BP,wEA5BO,EA6BP,2EA7BO,EA8BP,sEA9BO;AAtCD,S;AAuEiB,Q;;;;;;;;;;;;;;;;;;ACxG3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBakL,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBAXd,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,CAWc,EALrB,0DAKqB,EAJrB,kEAIqB,EAHrB,uEAGqB;;;;0HAAZA,Y,EAAY;AAAA,kBAVrB,4DAUqB,EATrB,0DASqB,EARrB,kEAQqB;AARF,kBAGnB,0DAHmB,EAInB,kEAJmB,EAKnB,uEALmB;AAQE,O;AAHP,K;;;;;sEAGLA,Y,EAAY;cAbxB,sDAawB;eAbf;AACRpK,sBAAY,EAAE,EADN;AAERP,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,CAFD;AAORP,iBAAO,EAAE,CACP,0DADO,EAEP,kEAFO,EAGP,uEAHO;AAPD,S;AAae,Q;;;;;;;;;;;;;;;;;;ACnBzB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmL,WAAW,GAAG;AACzBZ,SAAG,EAAE,wBADoB;AAEzBa,gBAAU,EAAE;AAFa,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIxD,OAAO,CAACyD,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {IndexComponent} from './categories/index/index.component';\r\nimport {CreateUpdateCategoryComponent} from '@app/categories/create-update-category/create-update-category.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'categories',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    path: 'categories/save',\r\n    component: CreateUpdateCategoryComponent\r\n  },\r\n  {\r\n    path: 'categories/save/:id',\r\n    component: CreateUpdateCategoryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'categories-tree';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CoreModule} from './core/core.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport { IndexComponent } from './index/index.component';\nimport { CreateUpdateCategoryComponent } from './create-update-category/create-update-category.component';\n\n\n@NgModule({\n  declarations: [IndexComponent, CreateUpdateCategoryComponent],\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule,\n    SharedModule\n  ]\n})\nexport class CategoriesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CategoriesService} from '@core/services/categories.service';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create-update-category',\n  templateUrl: './create-update-category.component.html',\n  styleUrls: ['./create-update-category.component.scss']\n})\nexport class CreateUpdateCategoryComponent implements OnInit {\n\n  categoryForm: FormGroup;\n  categories;\n  editCase;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private fb: FormBuilder,\n    public router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.categoryForm = this.fb.group({\n      parent: [''],\n      name: ['', Validators.required],\n      id: ['']\n    });\n\n    const routeSnapshot = this.route.snapshot.paramMap as any;\n    const id = +routeSnapshot.params.id;\n    this.editCase = !!id;\n\n    if (this.editCase) {\n      this.categoriesService.getCategoryById({id}).subscribe((dt) => {\n        this.categoryForm.patchValue(dt);\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.categoriesService.getList().subscribe((dt: any) => {\n      this.categories = dt;\n    });\n\n  }\n\n  saveCategory() {\n    if (this.editCase) {\n      this.categoriesService.update(this.categoryForm.value).subscribe(() => {\n        this.router.navigate(['categories']).then(r => r);\n      });\n    } else {\n\n      this.categoriesService.add(this.categoryForm.value).subscribe(() => {\n        this.router.navigate(['categories']).then(r => r);\n      });\n    }\n  }\n\n}\n","<form [formGroup]=\"categoryForm\">\n\n  <h2>Category details</h2>\n\n  <mat-label>Select parent category</mat-label>\n  <mat-form-field>\n    <mat-select formControlName=\"parent\">\n      <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">{{category.name}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput formControlName=\"name\" placeholder=\"Category name\">\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" (click)=\"saveCategory()\">\n    Save\n  </button>\n</form>\n","import {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\nimport {CategoriesService} from '@core/services/categories.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ConfirmationDialogComponent} from '@core/components/dialogs/confirmation-dialog/confirmation-dialog.component';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a filename, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  // type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    // public type: any,\r\n    public id: string\r\n  ) {\r\n  }\r\n}\r\n\r\n/**\r\n * The file structure tree data in string. The data could be parsed into a Json object\r\n */\r\nconst TREE_DATA = JSON.stringify({\r\n  Applications: {\r\n    Calendar: 'app',\r\n    Chrome: 'app',\r\n    Webstorm: 'app'\r\n  },\r\n  Documents: {\r\n    angular: {\r\n      src: {\r\n        compiler: 'ts',\r\n        core: 'ts'\r\n      }\r\n    },\r\n    material2: {\r\n      src: {\r\n        button: 'ts',\r\n        checkbox: 'ts',\r\n        input: 'ts'\r\n      }\r\n    }\r\n  },\r\n  Downloads: {\r\n    October: 'pdf',\r\n    November: 'pdf',\r\n    Tutorial: 'html'\r\n  },\r\n  Pictures: {\r\n    'Photo Booth Library': {\r\n      Contents: 'dir',\r\n      Pictures: 'dir'\r\n    },\r\n    Sun: 'png',\r\n    Woods: 'jpg'\r\n  }\r\n});\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  constructor(\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.categoriesService.get().subscribe((dt: any) => {\r\n\r\n      // Notify the change.\r\n      this.dataChange.next(dt);\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: 'index.component.html',\r\n  styleUrls: ['index.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class IndexComponent {\r\n\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  expandedNodeSet = new Set<string>();\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n\r\n  constructor(\r\n    database: FileDatabase,\r\n    private categoriesService: CategoriesService,\r\n    public router: Router,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => this.rebuildTreeForData(data));\r\n  }\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    return new FileFlatNode(!!node.children, node.name, level, node.id);\r\n  };\r\n  private getLevel = (node: FileFlatNode) => node.level;\r\n  private isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, nodeData: FileFlatNode) => nodeData.expandable;\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM,\r\n   * and calls rememberExpandedTreeNodes to persist expand state\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: Set<string>) {\r\n      result.push(node);\r\n      if (expanded.has(node.id)) {\r\n        // console.log(node);\r\n        if (node.hasOwnProperty('children')) {\r\n          node.children.map(child => addExpandedChildren(child, expanded));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.dataSource.data.forEach(node => {\r\n      addExpandedChildren(node, this.expandedNodeSet);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Handle the drop - here we rearrange the data based on the drop event,\r\n   * then rebuild the tree.\r\n   * */\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    // console.log('origin/destination', event.previousIndex, event.currentIndex);\r\n\r\n    // ignore drops outside of the tree\r\n    if (!event.isPointerOverContainer) {\r\n      return;\r\n    }\r\n\r\n    // construct a list of visible nodes, this will match the DOM.\r\n    // the cdkDragDrop event.currentIndex jives with visible nodes.\r\n    // it calls rememberExpandedTreeNodes to persist expand state\r\n    const visibleNodes = this.visibleNodes();\r\n\r\n    // deep clone the data source so we can mutate it\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data));\r\n\r\n    // recursive find function to find siblings of node\r\n    function findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n      let result, subResult;\r\n      arr.forEach(item => {\r\n        if (item.id === id) {\r\n          result = arr;\r\n        } else if (item.children) {\r\n          subResult = findNodeSiblings(item.children, id);\r\n          if (subResult) {\r\n            result = subResult;\r\n          }\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n\r\n    // remove the node from its old place\r\n    const node = event.item.data;\r\n    const siblings = findNodeSiblings(changedData, node.id);\r\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\r\n    const nodeToInsert: FileNode = siblings.splice(siblingIndex, 1)[0];\r\n    console.log(changedData);\r\n\r\n    // determine where to insert the node\r\n    const nodeAtDest = visibleNodes[event.currentIndex];\r\n    if (nodeAtDest.id === nodeToInsert.id) {\r\n      return;\r\n    }\r\n\r\n    // determine drop index relative to destination array\r\n    let relativeIndex = event.currentIndex; // default if no parent\r\n    const nodeAtDestFlatNode = this.treeControl.dataNodes.find(n => nodeAtDest.id === n.id);\r\n    const parent = this.getParentNode(nodeAtDestFlatNode);\r\n    if (parent) {\r\n      const parentIndex = visibleNodes.findIndex(n => n.id === parent.id) + 1;\r\n      relativeIndex = event.currentIndex - parentIndex;\r\n    }\r\n    // insert node\r\n    const newSiblings = findNodeSiblings(changedData, nodeAtDest.id);\r\n    if (!newSiblings) {\r\n      return;\r\n    }\r\n    newSiblings.splice(relativeIndex, 0, nodeToInsert);\r\n\r\n    this.categoriesService.updateCategoriesOrder(changedData).subscribe(dt => {\r\n\r\n    });\r\n    // rebuild tree with mutated data\r\n    this.rebuildTreeForData(changedData);\r\n  }\r\n\r\n  /**\r\n   * Experimental - opening tree nodes as you drag over them\r\n   */\r\n  dragStart() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  dragEnd() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  dragHover(node: FileFlatNode) {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n      this.expandTimeout = setTimeout(() => {\r\n        this.treeControl.expand(node);\r\n      }, this.expandDelay);\r\n    }\r\n  }\r\n\r\n  dragHoverEnd() {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n  rebuildTreeForData(data: any) {\r\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\r\n    this.dataSource.data = data;\r\n    this.forgetMissingExpandedNodes(this.treeControl, this.expandedNodeSet);\r\n    this.expandNodesById(this.treeControl.dataNodes, Array.from(this.expandedNodeSet));\r\n  }\r\n\r\n  private rememberExpandedTreeNodes(\r\n    treeControl: FlatTreeControl<FileFlatNode>,\r\n    expandedNodeSet: Set<string>\r\n  ) {\r\n    if (treeControl.dataNodes) {\r\n      treeControl.dataNodes.forEach((node) => {\r\n        if (treeControl.isExpandable(node) && treeControl.isExpanded(node)) {\r\n          // capture latest expanded state\r\n          expandedNodeSet.add(node.id);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private forgetMissingExpandedNodes(\r\n    treeControl: FlatTreeControl<FileFlatNode>,\r\n    expandedNodeSet: Set<string>\r\n  ) {\r\n    if (treeControl.dataNodes) {\r\n      expandedNodeSet.forEach((nodeId) => {\r\n        // maintain expanded node state\r\n        if (!treeControl.dataNodes.find((n) => n.id === nodeId)) {\r\n          // if the tree doesn't have the previous node, remove it from the expanded list\r\n          expandedNodeSet.delete(nodeId);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private expandNodesById(flatNodes: FileFlatNode[], ids: string[]) {\r\n    if (!flatNodes || flatNodes.length === 0) {\r\n      return;\r\n    }\r\n    const idSet = new Set(ids);\r\n    return flatNodes.forEach((node) => {\r\n      if (idSet.has(node.id)) {\r\n        this.treeControl.expand(node);\r\n        let parent = this.getParentNode(node);\r\n        while (parent) {\r\n          this.treeControl.expand(parent);\r\n          parent = this.getParentNode(parent);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeCategory(id) {\r\n    this.dialog.open(ConfirmationDialogComponent, {width: '500px'}).afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.categoriesService.remove({id}).subscribe((dt: any) => {\r\n          this.dataSource.data = dt;\r\n        });\r\n      }\r\n    })\r\n    ;\r\n  }\r\n}\r\n","<mat-sidenav>\r\n  <button mat-raised-button color=\"primary\" (click)=\"router.navigate(['/categories/save'])\">Add new category</button>\r\n</mat-sidenav>\r\n\r\n<div id=\"tree-container\">\r\n\r\n  <h2>Category tree</h2>\r\n  <br>\r\n  <div id=\"tree\">\r\n\r\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n                     (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n                     (cdkDragReleased)=\"dragEnd()\">\r\n        <button mat-icon-button disabled></button>\r\n        {{node.name}}\r\n        <button mat-icon-button (click)=\"router.navigate(['/categories/save/'+node.id])\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"removeCategory(node.id)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-tree-node>\r\n\r\n      <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n                     (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n                     (cdkDragReleased)=\"dragEnd()\">\r\n        <button mat-icon-button matTreeNodeToggle\r\n                [attr.aria-label]=\"'toggle ' + node.name\">\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n          </mat-icon>\r\n        </button>\r\n        {{node.name}}\r\n        <button mat-icon-button (click)=\"router.navigate(['/categories/save/'+node.id])\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"removeCategory(node.id)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-tree-node>\r\n    </mat-tree>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(\n    private dialog: MatDialogRef<ConfirmationDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  reject(){\n    this.dialog.close(false);\n  }\n  confirm(){\n    this.dialog.close(true);\n  }\n\n}\n","<div>\n  <p mat-dialog-title>Please Confirm this action</p>\n  <div class=\"action-buttons\" mat-dialog-content>\n    <button class=\"reject\" mat-raised-button color=\"accent\" (click)=\"reject()\">Reject</button>\n    <button class=\"confirm\" mat-raised-button color=\"primary\" (click)=\"confirm()\">Confirm</button>\n  </div>\n</div>\n","import {environment} from '@env';\r\n\r\nexport const API_URL = environment.url;\r\n\r\nexport const language = {\r\n    default: 'en',\r\n    supported: ['en', 'ru', 'hy']\r\n};\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CategoriesModule} from '../categories/categories.module';\nimport {ConfirmationDialogComponent} from './components/dialogs/confirmation-dialog/confirmation-dialog.component';\nimport {MaterialModule} from '@shared/modules/material.module';\n\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  imports: [\n    CommonModule,\n    CategoriesModule,\n    MaterialModule\n  ],\n  entryComponents: [\n    ConfirmationDialogComponent\n  ]\n})\nexport class CoreModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {API_URL} from '../constants/app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  get() {\n    return this.http.get(`${API_URL}categories/get`);\n  }\n\n  getList() {\n    return this.http.get(`${API_URL}categories/get-list`);\n  }\n\n  getCategoryById(params) {\n    return this.http.get(`${API_URL}categories/get-by-id`, {params});\n  }\n\n  add(data) {\n    return this.http.post(`${API_URL}categories/create`, data);\n  }\n\n  update(data) {\n    return this.http.put(`${API_URL}categories/update-details`, data);\n  }\n\n  remove(params) {\n    return this.http.delete(`${API_URL}categories/remove`, {params});\n  }\n\n  updateCategoriesOrder(data) {\n    return this.http.put(`${API_URL}categories/update-order`, data);\n  }\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatDialogModule, MatDialog} from '@angular/material/dialog';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    DragDropModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    MatDialog,\r\n  ],\r\n  exports: [\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    DragDropModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from './modules/material.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  url: 'http://localhost:3000/',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}