{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/categories/categories-routing.module.ts","./src/app/categories/categories.module.ts","./src/app/categories/create-update-category/create-update-category.component.ts","./src/app/categories/create-update-category/create-update-category.component.html","./src/app/categories/index/index.component.ts","./src/app/categories/index/index.component.html","./src/app/core/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts","./src/app/core/components/dialogs/confirmation-dialog/confirmation-dialog.component.html","./src/app/core/constants/app.config.ts","./src/app/core/core.module.ts","./src/app/core/services/categories.service.ts","./src/app/shared/modules/material.module.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {IndexComponent} from './categories/index/index.component';\r\nimport {CreateUpdateCategoryComponent} from '@app/categories/create-update-category/create-update-category.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'categories',\r\n    component: IndexComponent\r\n  },\r\n  {\r\n    path: 'categories/save',\r\n    component: CreateUpdateCategoryComponent\r\n  },\r\n  {\r\n    path: 'categories/save/:id',\r\n    component: CreateUpdateCategoryComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'categories-tree';\n}\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CoreModule} from './core/core.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriesRoutingModule } from './categories-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport { IndexComponent } from './index/index.component';\nimport { CreateUpdateCategoryComponent } from './create-update-category/create-update-category.component';\n\n\n@NgModule({\n  declarations: [IndexComponent, CreateUpdateCategoryComponent],\n  imports: [\n    CommonModule,\n    CategoriesRoutingModule,\n    SharedModule\n  ]\n})\nexport class CategoriesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {CategoriesService} from '@core/services/categories.service';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create-update-category',\n  templateUrl: './create-update-category.component.html',\n  styleUrls: ['./create-update-category.component.scss']\n})\nexport class CreateUpdateCategoryComponent implements OnInit {\n\n  categoryForm: FormGroup;\n  categories;\n  editCase;\n\n  constructor(\n    private categoriesService: CategoriesService,\n    private fb: FormBuilder,\n    public router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.categoryForm = this.fb.group({\n      parent: [''],\n      name: ['', Validators.required],\n      id: ['']\n    });\n\n    const routeSnapshot = this.route.snapshot.paramMap as any;\n    const id = +routeSnapshot.params.id;\n    this.editCase = !!id;\n\n    if (this.editCase) {\n      this.categoriesService.getCategoryById({id}).subscribe((dt) => {\n        this.categoryForm.patchValue(dt);\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.categoriesService.getList().subscribe((dt: any) => {\n      this.categories = dt;\n    });\n\n  }\n\n  saveCategory() {\n    if (this.editCase) {\n      this.categoriesService.update(this.categoryForm.value).subscribe(() => {\n        this.router.navigate(['categories']).then(r => r);\n      });\n    } else {\n\n      this.categoriesService.add(this.categoryForm.value).subscribe(() => {\n        this.router.navigate(['categories']).then(r => r);\n      });\n    }\n  }\n\n}\n","<form [formGroup]=\"categoryForm\">\n\n  <h2>Category details</h2>\n\n  <mat-label>Select parent category</mat-label>\n  <mat-form-field>\n    <mat-select formControlName=\"parent\">\n      <mat-option *ngFor=\"let category of categories\" [value]=\"category.id\">{{category.name}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput formControlName=\"name\" placeholder=\"Category name\">\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" (click)=\"saveCategory()\">\n    Save\n  </button>\n</form>\n","import {FlatTreeControl} from '@angular/cdk/tree';\r\nimport {Component, Injectable} from '@angular/core';\r\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\r\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\r\nimport {CdkDragDrop} from '@angular/cdk/drag-drop';\r\nimport {CategoriesService} from '@core/services/categories.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ConfirmationDialogComponent} from '@core/components/dialogs/confirmation-dialog/confirmation-dialog.component';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a filename, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  // type: any;\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    // public type: any,\r\n    public id: string\r\n  ) {\r\n  }\r\n}\r\n\r\n/**\r\n * The file structure tree data in string. The data could be parsed into a Json object\r\n */\r\nconst TREE_DATA = JSON.stringify({\r\n  Applications: {\r\n    Calendar: 'app',\r\n    Chrome: 'app',\r\n    Webstorm: 'app'\r\n  },\r\n  Documents: {\r\n    angular: {\r\n      src: {\r\n        compiler: 'ts',\r\n        core: 'ts'\r\n      }\r\n    },\r\n    material2: {\r\n      src: {\r\n        button: 'ts',\r\n        checkbox: 'ts',\r\n        input: 'ts'\r\n      }\r\n    }\r\n  },\r\n  Downloads: {\r\n    October: 'pdf',\r\n    November: 'pdf',\r\n    Tutorial: 'html'\r\n  },\r\n  Pictures: {\r\n    'Photo Booth Library': {\r\n      Contents: 'dir',\r\n      Pictures: 'dir'\r\n    },\r\n    Sun: 'png',\r\n    Woods: 'jpg'\r\n  }\r\n});\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\r\n * For a directory, it has filename and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n\r\n  get data(): FileNode[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  constructor(\r\n    private categoriesService: CategoriesService\r\n  ) {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n\r\n    this.categoriesService.get().subscribe((dt: any) => {\r\n\r\n      // Notify the change.\r\n      this.dataChange.next(dt);\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: 'index.component.html',\r\n  styleUrls: ['index.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class IndexComponent {\r\n\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  expandedNodeSet = new Set<string>();\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n\r\n  constructor(\r\n    database: FileDatabase,\r\n    private categoriesService: CategoriesService,\r\n    public router: Router,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\r\n      this.isExpandable, this.getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this.getLevel, this.isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n\r\n    database.dataChange.subscribe(data => this.rebuildTreeForData(data));\r\n  }\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    return new FileFlatNode(!!node.children, node.name, level, node.id);\r\n  };\r\n  private getLevel = (node: FileFlatNode) => node.level;\r\n  private isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, nodeData: FileFlatNode) => nodeData.expandable;\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM,\r\n   * and calls rememberExpandedTreeNodes to persist expand state\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: Set<string>) {\r\n      result.push(node);\r\n      if (expanded.has(node.id)) {\r\n        // console.log(node);\r\n        if (node.hasOwnProperty('children')) {\r\n          node.children.map(child => addExpandedChildren(child, expanded));\r\n        }\r\n      }\r\n    }\r\n\r\n    this.dataSource.data.forEach(node => {\r\n      addExpandedChildren(node, this.expandedNodeSet);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Handle the drop - here we rearrange the data based on the drop event,\r\n   * then rebuild the tree.\r\n   * */\r\n  drop(event: CdkDragDrop<string[]>) {\r\n    // console.log('origin/destination', event.previousIndex, event.currentIndex);\r\n\r\n    // ignore drops outside of the tree\r\n    if (!event.isPointerOverContainer) {\r\n      return;\r\n    }\r\n\r\n    // construct a list of visible nodes, this will match the DOM.\r\n    // the cdkDragDrop event.currentIndex jives with visible nodes.\r\n    // it calls rememberExpandedTreeNodes to persist expand state\r\n    const visibleNodes = this.visibleNodes();\r\n\r\n    // deep clone the data source so we can mutate it\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data));\r\n\r\n    // recursive find function to find siblings of node\r\n    function findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n      let result, subResult;\r\n      arr.forEach(item => {\r\n        if (item.id === id) {\r\n          result = arr;\r\n        } else if (item.children) {\r\n          subResult = findNodeSiblings(item.children, id);\r\n          if (subResult) {\r\n            result = subResult;\r\n          }\r\n        }\r\n      });\r\n      return result;\r\n    }\r\n\r\n    // remove the node from its old place\r\n    const node = event.item.data;\r\n    const siblings = findNodeSiblings(changedData, node.id);\r\n    const siblingIndex = siblings.findIndex(n => n.id === node.id);\r\n    const nodeToInsert: FileNode = siblings.splice(siblingIndex, 1)[0];\r\n    console.log(changedData);\r\n\r\n    // determine where to insert the node\r\n    const nodeAtDest = visibleNodes[event.currentIndex];\r\n    if (nodeAtDest.id === nodeToInsert.id) {\r\n      return;\r\n    }\r\n\r\n    // determine drop index relative to destination array\r\n    let relativeIndex = event.currentIndex; // default if no parent\r\n    const nodeAtDestFlatNode = this.treeControl.dataNodes.find(n => nodeAtDest.id === n.id);\r\n    const parent = this.getParentNode(nodeAtDestFlatNode);\r\n    if (parent) {\r\n      const parentIndex = visibleNodes.findIndex(n => n.id === parent.id) + 1;\r\n      relativeIndex = event.currentIndex - parentIndex;\r\n    }\r\n    // insert node\r\n    const newSiblings = findNodeSiblings(changedData, nodeAtDest.id);\r\n    if (!newSiblings) {\r\n      return;\r\n    }\r\n    newSiblings.splice(relativeIndex, 0, nodeToInsert);\r\n\r\n    this.categoriesService.updateCategoriesOrder(changedData).subscribe(dt => {\r\n\r\n    });\r\n    // rebuild tree with mutated data\r\n    this.rebuildTreeForData(changedData);\r\n  }\r\n\r\n  /**\r\n   * Experimental - opening tree nodes as you drag over them\r\n   */\r\n  dragStart() {\r\n    this.dragging = true;\r\n  }\r\n\r\n  dragEnd() {\r\n    this.dragging = false;\r\n  }\r\n\r\n  dragHover(node: FileFlatNode) {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n      this.expandTimeout = setTimeout(() => {\r\n        this.treeControl.expand(node);\r\n      }, this.expandDelay);\r\n    }\r\n  }\r\n\r\n  dragHoverEnd() {\r\n    if (this.dragging) {\r\n      clearTimeout(this.expandTimeout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n  rebuildTreeForData(data: any) {\r\n    this.rememberExpandedTreeNodes(this.treeControl, this.expandedNodeSet);\r\n    this.dataSource.data = data;\r\n    this.forgetMissingExpandedNodes(this.treeControl, this.expandedNodeSet);\r\n    this.expandNodesById(this.treeControl.dataNodes, Array.from(this.expandedNodeSet));\r\n  }\r\n\r\n  private rememberExpandedTreeNodes(\r\n    treeControl: FlatTreeControl<FileFlatNode>,\r\n    expandedNodeSet: Set<string>\r\n  ) {\r\n    if (treeControl.dataNodes) {\r\n      treeControl.dataNodes.forEach((node) => {\r\n        if (treeControl.isExpandable(node) && treeControl.isExpanded(node)) {\r\n          // capture latest expanded state\r\n          expandedNodeSet.add(node.id);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private forgetMissingExpandedNodes(\r\n    treeControl: FlatTreeControl<FileFlatNode>,\r\n    expandedNodeSet: Set<string>\r\n  ) {\r\n    if (treeControl.dataNodes) {\r\n      expandedNodeSet.forEach((nodeId) => {\r\n        // maintain expanded node state\r\n        if (!treeControl.dataNodes.find((n) => n.id === nodeId)) {\r\n          // if the tree doesn't have the previous node, remove it from the expanded list\r\n          expandedNodeSet.delete(nodeId);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private expandNodesById(flatNodes: FileFlatNode[], ids: string[]) {\r\n    if (!flatNodes || flatNodes.length === 0) {\r\n      return;\r\n    }\r\n    const idSet = new Set(ids);\r\n    return flatNodes.forEach((node) => {\r\n      if (idSet.has(node.id)) {\r\n        this.treeControl.expand(node);\r\n        let parent = this.getParentNode(node);\r\n        while (parent) {\r\n          this.treeControl.expand(parent);\r\n          parent = this.getParentNode(parent);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  removeCategory(id) {\r\n    this.dialog.open(ConfirmationDialogComponent, {width: '500px'}).afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.categoriesService.remove({id}).subscribe((dt: any) => {\r\n          this.dataSource.data = dt;\r\n        });\r\n      }\r\n    })\r\n    ;\r\n  }\r\n}\r\n","<mat-sidenav>\r\n  <button mat-raised-button color=\"primary\" (click)=\"router.navigate(['/categories/save'])\">Add new category</button>\r\n</mat-sidenav>\r\n\r\n<div id=\"tree-container\">\r\n\r\n  <h2>Category tree</h2>\r\n  <br>\r\n  <div id=\"tree\">\r\n\r\n    <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" cdkDropList (cdkDropListDropped)=\"drop($event)\">\r\n      <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n                     (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n                     (cdkDragReleased)=\"dragEnd()\">\r\n        <button mat-icon-button disabled></button>\r\n        {{node.name}}\r\n        <button mat-icon-button (click)=\"router.navigate(['/categories/save/'+node.id])\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"removeCategory(node.id)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-tree-node>\r\n\r\n      <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding cdkDrag [cdkDragData]=\"node\"\r\n                     (mouseenter)=\"dragHover(node)\" (mouseleave)=\"dragHoverEnd()\" (cdkDragStarted)=\"dragStart()\"\r\n                     (cdkDragReleased)=\"dragEnd()\">\r\n        <button mat-icon-button matTreeNodeToggle\r\n                [attr.aria-label]=\"'toggle ' + node.name\">\r\n          <mat-icon class=\"mat-icon-rtl-mirror\">\r\n            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\r\n          </mat-icon>\r\n        </button>\r\n        {{node.name}}\r\n        <button mat-icon-button (click)=\"router.navigate(['/categories/save/'+node.id])\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n        <button mat-icon-button (click)=\"removeCategory(node.id)\">\r\n          <mat-icon>clear</mat-icon>\r\n        </button>\r\n      </mat-tree-node>\r\n    </mat-tree>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.scss']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(\n    private dialog: MatDialogRef<ConfirmationDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  reject(){\n    this.dialog.close(false);\n  }\n  confirm(){\n    this.dialog.close(true);\n  }\n\n}\n","<div>\n  <p mat-dialog-title>Please Confirm this action</p>\n  <div class=\"action-buttons\" mat-dialog-content>\n    <button class=\"reject\" mat-raised-button color=\"accent\" (click)=\"reject()\">Reject</button>\n    <button class=\"confirm\" mat-raised-button color=\"primary\" (click)=\"confirm()\">Confirm</button>\n  </div>\n</div>\n","import {environment} from '@env';\r\n\r\nexport const API_URL = environment.url;\r\n\r\nexport const language = {\r\n    default: 'en',\r\n    supported: ['en', 'ru', 'hy']\r\n};\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CategoriesModule} from '../categories/categories.module';\nimport {ConfirmationDialogComponent} from './components/dialogs/confirmation-dialog/confirmation-dialog.component';\nimport {MaterialModule} from '@shared/modules/material.module';\n\n\n@NgModule({\n  declarations: [ConfirmationDialogComponent],\n  imports: [\n    CommonModule,\n    CategoriesModule,\n    MaterialModule\n  ],\n  entryComponents: [\n    ConfirmationDialogComponent\n  ]\n})\nexport class CoreModule {\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {API_URL} from '../constants/app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  get() {\n    return this.http.get(`${API_URL}categories/get`);\n  }\n\n  getList() {\n    return this.http.get(`${API_URL}categories/get-list`);\n  }\n\n  getCategoryById(params) {\n    return this.http.get(`${API_URL}categories/get-by-id`, {params});\n  }\n\n  add(data) {\n    return this.http.post(`${API_URL}categories/create`, data);\n  }\n\n  update(data) {\n    return this.http.put(`${API_URL}categories/update-details`, data);\n  }\n\n  remove(params) {\n    return this.http.delete(`${API_URL}categories/remove`, {params});\n  }\n\n  updateCategoriesOrder(data) {\n    return this.http.put(`${API_URL}categories/update-order`, data);\n  }\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatDialogModule, MatDialog} from '@angular/material/dialog';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    DragDropModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    MatDialog,\r\n  ],\r\n  exports: [\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTableModule,\r\n    MatDividerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatSlideToggleModule,\r\n    MatChipsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatProgressSpinnerModule,\r\n    MatBadgeModule,\r\n    MatSliderModule,\r\n    MatAutocompleteModule,\r\n    MatMenuModule,\r\n    MatButtonToggleModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    DragDropModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from './modules/material.module';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  url: 'http://localhost:3000/',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}